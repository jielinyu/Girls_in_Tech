success_rate<-c(success_rate,count/n_sim)
acf(p)
}
success_rate
0.02379^2
sigma<-c(0.001,0.01,0.03,0.1,1)
success_rate<-NULL
for(sigma in sigma){
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
count<-0
for (i in 2:n_sim){
p[i] <- rnorm(1,p[i-1],sigma)
if (p[i]<0 | p[i]>1){p[i]<-0}
else{
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
count<-count+1
}
else{
p[i]<-p[i-1]
}
}
}
success_rate<-c(success_rate,count/n_sim)
acf(p)
}
success_rate
n_sim <- 100000 # Number of simulations desired
n <- 50 # from the data
x <- 40 # from the data
a <- 1  # hyperparameter
b <- 1  # hyperparameter
alpha <- function(p1, p2){
return(min(1, p1^(a-1+x)*(1-p1)^(b-1+n-x)/(p2^(a-1+x)*(1-p2)^(b-1+n-x))))
}
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
for (i in 2:n_sim){
p[i] <- rnorm(1,p[i-1],0.03)
if (p[i]<0 | p[i]>1){p[i]<-0}
else{
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
}
else{
p[i]<-p[i-1]
}
}
}
hist(p[5000:n_sim], prob=T) # hist of the sample
lines(seq(0,1,0.01),dbeta(seq(0,1,0.01),a+x,b+n-x)) # theorectical curve
n_sim <- 100000 # Number of simulations desired
n <- 50 # from the data
x <- 40 # from the data
a <- 1  # hyperparameter
b <- 1  # hyperparameter
alpha <- function(p1, p2){
return(min(1, p1^(a-1+x)*(1-p1)^(b-1+n-x)/(p2^(a-1+x)*(1-p2)^(b-1+n-x))))
}
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
for (i in 2:n_sim){
p[i] <- runif(1)
if (p[i]<0 | p[i]>1){p[i]<-0}
else{
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
}
else{
p[i]<-p[i-1]
}
}
}
hist(p[5000:n_sim], prob=T) # hist of the sample
lines(seq(0,1,0.01),dbeta(seq(0,1,0.01),a+x,b+n-x)) # theorectical curve
n_sim <- 100000 # Number of simulations desired
n <- 50 # from the data
x <- 40 # from the data
a <- 1  # hyperparameter
b <- 1  # hyperparameter
alpha <- function(p1, p2){
return(min(1, p1^(a-1+x)*(1-p1)^(b-1+n-x)/(p2^(a-1+x)*(1-p2)^(b-1+n-x))))
}
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
for (i in 2:n_sim){
p[i] <- rnorm(1,p[i-1],sqrt(0.03))
if (p[i]<0 | p[i]>1){p[i]<-0}
else{
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
}
else{
p[i]<-p[i-1]
}
}
}
hist(p[5000:n_sim], prob=T) # hist of the sample
lines(seq(0,1,0.01),dbeta(seq(0,1,0.01),a+x,b+n-x)) # theorectical curve
n_sim <- 100000 # Number of simulations desired
n <- 50 # from the data
x <- 40 # from the data
a <- 1  # hyperparameter
b <- 1  # hyperparameter
alpha <- function(p1, p2){
return(min(1, p1^(a-1+x)*(1-p1)^(b-1+n-x)/(p2^(a-1+x)*(1-p2)^(b-1+n-x))))
}
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
for (i in 2:n_sim){
p[i] <- runif(1)
if (p[i]<0 | p[i]>1){p[i]<-0}
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
}
else{
p[i]<-p[i-1]
}
}
hist(p[5000:n_sim], prob=T) # hist of the sample
lines(seq(0,1,0.01),dbeta(seq(0,1,0.01),a+x,b+n-x)) # theorectical curve
n_sim <- 100000 # Number of simulations desired
n <- 50 # from the data
x <- 40 # from the data
a <- 1  # hyperparameter
b <- 1  # hyperparameter
alpha <- function(p1, p2){
return(min(1, p1^(a-1+x)*(1-p1)^(b-1+n-x)/(p2^(a-1+x)*(1-p2)^(b-1+n-x))))
}
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
for (i in 2:n_sim){
p[i] <- rnorm(1,p[i-1],sqrt(0.03))
if (p[i]<0 | p[i]>1){p[i]<-0}
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
}
else{
p[i]<-p[i-1]
}
}
hist(p[5000:n_sim], prob=T) # hist of the sample
lines(seq(0,1,0.01),dbeta(seq(0,1,0.01),a+x,b+n-x)) # theorectical curve
sigma<-c(0.001,0.01,0.03,0.1,1)
success_rate<-NULL
for(sigma in sigma){
p <- NULL
p[1] <- 0.5
u <- runif(n_sim,0,1)
count<-0
for (i in 2:n_sim){
p[i] <- rnorm(1,p[i-1],sigma)
# probability should belong to (0,1)
if (p[i]<0 | p[i]>1){p[i]<-0}
if(u[i]<=alpha(p[i],p[i-1])){
p[i]<-p[i]
count<-count+1
}
else{
p[i]<-p[i-1]
}
}
success_rate<-c(success_rate,count/n_sim)
acf(p)
}
success_rate
startdf <- cbind(expand.grid(x=0:100/100*pi, y=0:100/100*pi), w=rnorm(101^2))
startdf <- startdf %>% mutate(halfx=x/2, halfy=y/2)
g.dummy <- gstat(formula=z~halfx+halfy, locations=~x+y, dummy=TRUE, beta=c(1,1,1),
model=vgm(psill=50.025, range=1500, model='Exp', nugget=0), nmax=20)
dat <- predict(g.dummy, newdata=startdf, nsim=4)
gridded(dat) <- ~x+y
spplot(dat[1])
startdf <- cbind(expand.grid(x=0:100/100*pi, y=0:100/100*pi), w=rnorm(101^2))
startdf
g.dummy
f.trend<-log(rain)~east+north
v.trend<-variogram(f.trend,data)
v.trend.fit <- fit.variogram(v.trend,vgm(1,"Exp",300,1))
pred.ik<-krige(log(rain)~east+north,data,data.grid,v.trend.fit)
spplot(pred.ik["var1.pred"],main="universal kriging prediction")
spplot(pred.ik["var1.var"],main="universal kriging prediction")
f.trend<-rain~east+north
v.trend<-variogram(f.trend,data)
v.trend.fit <- fit.variogram(v.trend,vgm(1,"Exp",300,1))
pred.ik<-krige(rain~east+north,data,data.grid,v.trend.fit)
spplot(pred.ik["var1.pred"],main="universal kriging prediction")
spplot(pred.ik["var1.var"],main="universal kriging prediction")
startdf <- cbind(expand.grid(x=0:100/100*pi, y=0:100/100*pi), w=rnorm(101^2))
startdf <- startdf %>% mutate(sinx=sin(x)^2, siny=sin(y)^2)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=TRUE, beta=1,
model=vgm(psill=50.025, range=1500, model='Exp', nugget=0), nmax=20)
dat <- predict(g.dummy, newdata=startdf, nsim=4)
gridded(dat) <- ~x+y
spplot(dat[1])
startdf <- cbind(expand.grid(x=0:100/100*pi, y=0:100/100*pi), w=rnorm(101^2))
startdf <- startdf %>% mutate(sinx=sin(x)^2, siny=sin(y)^2)
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=TRUE, beta=1,
model=vgm(psill=50.025, range=1500, model='Exp', nugget=0), nmax=20)
dat <- predict(g.dummy, newdata=startdf, nsim=4)
gridded(dat) <- ~x+y
spplot(dat[1])
data<-read.csv("data/parana.csv")
head(data)
coordinates(data)<-c("east","north")
vari<-variogram(log(rain)~1,data,cloud=TRUE)
vari_sample<-variogram(log(rain)~1,data)
(p<-ggplot()+geom_point(data=vari,aes(dist,gamma),alpha=.15)+
geom_line(data=vari_sample,aes(dist,gamma),col="blue",size=1.5)+
geom_point(data=vari_sample,aes(dist,gamma),col="red",size=1.5))
vari_fitted<-fit.variogram(object = vari_sample,model = vgm(model=c("Exp")))
summary(vari_fitted)
(p+geom_line(data=variogramLine( vari_fitted,maxdist=250),aes(dist,gamma),col="green",size=1.5))
variogramLine( vari_fitted,maxdist=0,n=1)
(fit_lme_age<-lmer(time_to_sleep~method*age+(method*age|volunteer),data=sleep))
coef(fit_lme_age)
coef(fit_lme_age)
(fit_lme_age<-lmer(time_to_sleep~method*age+(method*age|volunteer),data=sleep))
(fit_lme_age<-lmer(time_to_sleep~method*age+(method*age|volunteer),data=sleep))
glmer(time_to_sleep ~ method + (method | volunteer), data = sleep) %>% tidy() %>% .[2,]
fit_lme %>% tidy(conf.int=TRUE)
setwd("~/Documents/562_regre/DSCI_562_regr-2_students/2018/quiz2sol")
setwd("~/")
suppressPackageStartupMessages(library(tidyverse))
suppressPackageStartupMessages(library(tidyverse))
gwas <- suppressMessages(read_csv('data/GWAS_results.csv')) %>%
select(gene=public_gene_name, pval=`p-value`)
View(gwas)
length(gwas$gene)
gwas[gwas$pval<0.05]
gwas[gwas$pval<0.05,1]
length(gwas[gwas$pval<0.05,1])
gwas[gwas$pval<0.05,1]
nrow( gwas[gwas$pval<0.05,1])
print("The numbers of genes associated with the phenotype is : ",nrow( gwas[gwas$pval<0.05,1]))
print("The numbers of genes associated with the phenotype is : ", nrow( gwas[gwas$pval<0.05,1]))
print("The numbers of genes associated with the phenotype is : ", nrow( gwas[gwas$pval<0.05,1]))
nrow( gwas[gwas$pval<0.05,1])
print("The numbers of genes associated with the phenotype is : ", nrow( gwas[gwas$pval<0.05,1]))
print("The numbers of genes presented in the total dataset is : ",length(gwas$gene))
print("The numbers of genes presented in the total dataset is : ",length(gwas$gene))
print("The numbers of genes associated with the phenotype is : "nrow( gwas[gwas$pval<0.05,1]))
print("The numbers of genes associated with the phenotype is : ") nrow( gwas[gwas$pval<0.05,1])
nrow( gwas[gwas$pval<0.05,1])
print("The numbers of genes presented in the total dataset is : ")
length(gwas$gene)
print("The numbers of genes associated with the phenotype is : ")
nrow( gwas[gwas$pval<0.05,1])
print("The number of genes presented in the total dataset is : ")
length(gwas$gene)
print("The number of genes associated with the phenotype is : ")
nrow( gwas[gwas$pval<0.05,1])
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
cbind(gwas,p_adjust)
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
nrow( gwas[gwas$p_adjust<0.05,1])
nrow( gwas[gwas$p_adjust<0.05,1])
nrow( gwas[gwas$p_adjust<0.05,1])
gwas = cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
nrow( gwas[gwas<0.05,1])
nrow( gwas[gwas$p_adjust<0.05,1])
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
gwas = cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
nrow( gwas[gwas$p_adjust<0.05,1])
gwas[gwas$p_adjust<0.05,1]
gwas[gwas$p_adjust<0.05,1]
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
gwas = cbind(gwas,p_adjust)
gwas[gwas$p_adjust<0.05,1]
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
gwas = cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
nrow( gwas[gwas$p_adjust<0.05,1])
length( gwas[gwas$p_adjust<0.05,1])
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
gwas = cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
length( gwas[gwas$p_adjust<0.05,1])
n=length(nrow(gwas))
n
n=nrow(gwas)
y=order(gwas$pval)
y
y=sort(gwas$pval)
y
plot(qdis(1:n/n),sort(gwas$pval))
plot(qdist(1:n/n),sort(gwas$pval))
install.packages("mosaic")
library(mosaic)
n=nrow(gwas)
y=sort(gwas$pval)
plot(qdist(1:n/n),sort(gwas$pval))
qdist(1:n/n)
1:n/n
qdist(1:n/n)
library(mosaic)
n=nrow(gwas)
y=sort(gwas$pval)
plot(qunif(1:n/n),sort(gwas$pval))
plot(-log10( qunif(1:n/n)),sort(-log10(gwas$pval)))
plot(-log10( qunif(1:n/n)),-log10(sort(gwas$pval)))
gwas %>% mutate(p_bh = p.adjust(pval,method = "BH"))
gwas <- suppressMessages(read_csv('data/GWAS_results.csv')) %>%
select(gene=public_gene_name, pval=`p-value`)
print("The number of genes presented in the total dataset is : ")
length(gwas$gene)
print("The number of genes associated with the phenotype is : ")
nrow( gwas[gwas$pval<0.05,1])
p_adjust = p.adjust(gwas$pval,method = "bonferroni")
gwas = cbind(gwas,p_adjust)
print("The number of genes associated with the phenotype after the adjustment is : ")
length( gwas[gwas$p_adjust<0.05,1])
gwas %>% mutate(p_bh = p.adjust(pval,method = "BH"))
gwas = gwas %>% mutate(p_bh = p.adjust(pval,method = "BH"))
nrow(gwas[gwas$p_bh<0.05])
gwas = gwas %>% mutate(p_bh = p.adjust(pval,method = "BH"))
nrow(gwas[gwas$p_bh<0.05])
nrow(gwas[gwas$p_bh<0.05,1])
gwas[gwas$p_bh<0.05,1]
length(gwas[gwas$p_bh<0.05,1])
print("The number of genes associated with the phenotype using BH method is : ")
gwas = gwas %>% mutate(p_bh = p.adjust(pval,method = "BH"))
print("The number of genes associated with the phenotype using BH method is : ")
length(gwas[gwas$p_bh<0.05,1])
setwd("~/Documents/Girls_in_Tech")
library(readr)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
View(Agriculture_emission)
library(readr)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
View(Agriculture_value)
View(Livestock_emission)
library(tidyverse)
# Aggregate value by year
Livestock_emission %>% group_by(Year) %>% summarize(total_value = sum(Value)) %>% select(Year,total_value)
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(total_value = sum(Value)) %>% select(Year,total_value)
View(Livestock_value)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(total_value = sum(Value)) %>% select(Year, total_value)
Livestock_value <- read_csv("data/Livestock_value.csv")
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(total_value = sum(as.numeric(Value))) %>% select(Year, total_value)
library(readr)
annual_co2_emissions_per_country <- read_csv("data/annual-co2-emissions-per-country.csv")
View(annual_co2_emissions_per_country)
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
co2_global <- co2_global %>% group_by(Year) %>% summarize(total_value = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, total_value)
View(co2_global)
View(Agriculture_emission)
View(Agriculture_value)
Agriculture_value <- read_csv("data/Agriculture_value.csv")
View(Agriculture_emission)
co2_global <- co2_global %>% group_by(Year) %>% summarize(total_value = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, total_value)
View(annual_co2_emissions_per_country)
View(co2_global)
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
co2_global <- co2_global %>% group_by(Year) %>% summarize(total_value = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, total_value) %>% filter(Year >1960)
View(Livestock_value)
# Import dataset
library(readr)
library(tidyverse)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(total_value = sum(Value)) %>% select(Year,total_value)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(total_value = sum(as.numeric(Value))) %>% select(Year, total_value)
co2_global <- co2_global %>% group_by(Year) %>% summarize(total_value = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, total_value) %>% filter(Year >1960)
View(Agriculture_emission)
Agriculture_emission <- Agriculture_emission %>% filter(Item == "Agriculture total") %>% select(Year,Value)
View(Livestock_value)
# Import dataset
library(readr)
library(tidyverse)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(total_value = sum(Value)) %>% select(Year,total_value)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(total_value = sum(as.numeric(Value))) %>%filter(Year < 2017) %>% select(Year, total_value)
co2_global <- co2_global %>% group_by(Year) %>% summarize(total_value = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, total_value) %>% filter(Year >1960)
Agriculture_emission <- Agriculture_emission %>% filter(Item == "Agriculture total") %>% select(Year,Value)
View(Agriculture_value)
View(Agriculture_value)
View(Agriculture_emission)
# Import dataset
library(readr)
library(tidyverse)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(value_le = sum(Value)) %>% select(Year,value_le)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(value_lv = sum(as.numeric(Value))) %>%filter(Year < 2017) %>% select(Year, value_lv)
co2_global <- co2_global %>% group_by(Year) %>% summarize(value_co2 = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, value_co2) %>% filter(Year >1960)
Agriculture_emission <- Agriculture_emission %>% filter(Item == "Agriculture total") %>% rename(value_ae = Value) %>%  select(Year,value_ae)
Agriculture_value <- Agriculture_value %>% rename(value_av = Value)
View(Agriculture_emission)
View(Agriculture_emission)
View(co2_global)
final_df <- do.call("cbine",list(Livestock_emission,Livestock_value,co2_global,Agriculture_emission,Agriculture_value))
final_df <- do.call("cbind",list(Livestock_emission,Livestock_value,co2_global,Agriculture_emission,Agriculture_value))
View(final_df)
summary(co2_global)
summary(Agriculture_emission)
# Import dataset
library(readr)
library(tidyverse)
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(value_le = sum(Value)) %>% select(Year,value_le)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(value_lv = sum(as.numeric(Value))) %>%filter(Year < 2017) %>% select(Year, value_lv)
co2_global <- co2_global %>% group_by(Year) %>% summarize(value_co2 = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, value_co2) %>% filter(Year >1960)
Agriculture_emission <- Agriculture_emission %>% filter(Item == "Agriculture total") %>% rename(value_ae = Value) %>%  select(Year,value_ae)
Agriculture_value <- Agriculture_value %>% rename(value_av = Value) %>% select(Year, value_av)
final_df <- do.call("cbind",list(Livestock_emission,Livestock_value,co2_global,Agriculture_emission,Agriculture_value))
names(final_df)
final_df[-c(3,5,7,9)]
final_df<-final_df[-c(3,5,7,9)]
library(ggplot2)
names(final_df)
final_df %>% ggplot(aes(Year, value_le)) + geom_line()
write_csv(final_df,"data/final_df")
final_df %>% ggplot(aes(Year)) + geom_line(y=value_le,colour="value_le") + geom_line(y=value_lv,colour="value_lv")
final_df %>% ggplot(aes(Year)) + geom_line(y=value_le,colour="value_le") + geom_line(y=value_lv,colour="value_lv")
names(final_df)
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_le,colour="value_le")) + geom_line(aes(y=value_lv,colour="value_lv"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_le,colour="value_le")) + geom_line(aes(y=log(value_lv),colour="value_lv"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=log(value_le),colour="value_le")) + geom_line(aes(y=value_lv,colour="value_lv"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_co2,colour="value_co2")) + geom_line(aes(y=value_lv,colour="value_lv"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_co2,colour="value_co2")) + geom_line(aes(y=value_av,colour="value_av"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="value_av"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="value_av")) + geom_line(aes(y=value_lv,colour="value_lv"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_line(aes(y=value_lv,colour="livestock value"))
library(readr)
library(tidyverse)
library(ggplot2)
# Import dataset
Agriculture_emission <- read_csv("data/Agriculture_emission.csv")
Agriculture_value <- read_csv("data/Agriculture_value.csv")
Livestock_emission <- read_csv("data/Livestock_emission.csv")
Livestock_value <- read_csv("data/Livestock_value.csv")
co2_global <- read_csv("data/annual-co2-emissions-per-country.csv")
View(Livestock_value)
# Aggregate value by year
Livestock_emission <- Livestock_emission %>% group_by(Year) %>% summarize(value_le = sum(Value)) %>% select(Year,value_le)
Livestock_value <-Livestock_value %>% group_by(Year) %>% summarize(value_lv = sum(as.numeric(Value))) %>%filter(Year < 2017) %>% select(Year, value_lv)
co2_global <- co2_global %>% group_by(Year) %>% summarize(value_co2 = sum(`Annual CO₂ emissions (Global Carbon Project (2017)) (tonnes)`)) %>% select(Year, value_co2) %>% filter(Year >1960)
Agriculture_emission <- Agriculture_emission %>% filter(Item == "Agriculture total") %>% rename(value_ae = Value) %>%  select(Year,value_ae)
Agriculture_value <- Agriculture_value %>% rename(value_av = Value) %>% select(Year, value_av)
final_df <- do.call("cbind",list(Livestock_emission,Livestock_value,co2_global,Agriculture_emission,Agriculture_value))
final_df<-final_df[-c(3,5,7,9)]
write_csv(final_df,"data/final_df")
names(final_df)
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_line(aes(y=value_lv,colour="livestock value"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_lv,colour="livestock emission"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="livestock emission"))
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_line(aes(y=value_lv,colour="livestock value")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_line(aes(y=value_lv,colour="livestock value")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_point(aes(y=value_lv,colour="livestock value")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour=Year)) + geom_point(aes(y=value_lv,colour="livestock value")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_point(aes(y=value_lv,colour=Year)) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av,colour="agriculture value")) + geom_point(aes(y=value_lv,colour=Year)) #+coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_av)) + geom_point(aes(y=value_lv,colour=Year)) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agricultural Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agricultural Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +xlab("Emission")+ylab("CO2 Value")+coord_flip()
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agricultural Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +xlab("Emission")+ylab("CO2 Value")+coord_flip()+theme_bw()
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agriculture Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()+title("How Agriculture/Livestock Value affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agriculture Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()+title("How Agriculture/Livestock Value affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agriculture Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs("How Agriculture/Livestock Value affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +xlab("Emission")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs("How Agriculture/Livestock Emission affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agriculture Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs(title = "How Agriculture/Livestock Value affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +xlab("Emission")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs(title = "How Agriculture/Livestock Emission affect Co2")
final_df %>% ggplot(aes(Time)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission"))
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_ae,colour="Agriculture Value")) + geom_line(aes(y=value_le,colour="Livestock Value")) + labs(title = "Value Change") + ylab("Value")
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_av,colour="Agriculture Value")) + geom_line(aes(y=value_lv,colour="Livestock Value")) + labs(title = "Value Change") + ylab("Value")
final_df %>% ggplot(aes(value_co2)) + geom_point(aes(y=value_av, colour = "Agriculture Value")) + geom_point(aes(y=value_lv,colour="Livestock Value")) +xlab("Value")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs(title = "How Agriculture/Livestock Value affect Co2")
final_df %>% ggplot(aes(value_co2)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) +xlab("Emission")+ylab("CO2 Value")+coord_flip()+theme_bw()+labs(title = "How Agriculture/Livestock Emission affect Co2")
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_ae,colour="Agriculture Emission")) + geom_line(aes(y=value_le,colour="Livestock Emission")) + labs(title = "Emission Change") + ylab("Emission")+theme_bw()
final_df %>% ggplot(aes(Year)) + geom_line(aes(y=value_av,colour="Agriculture Value")) + geom_line(aes(y=value_lv,colour="Livestock Value")) + labs(title = "Value Change") + ylab("Value")+theme_bw()
